"use strict";var app=angular.module("retrofire",["firebase","angular-md5","ui.bootstrap","ui.router","ngTable","textAngular"]).config(["$stateProvider","$urlRouterProvider",function(a,b){a.state("home",{url:"/",resolve:{requireNoAuth:["$state","Auth",function(a,b){return b.$requireAuth().then(function(b){a.go("dashboard")},function(b){a.go("login")})}]}}).state("login",{url:"/login",controller:"AuthCtrl as authCtrl",templateUrl:"auth/login.html",resolve:{requireNoAuth:["$state","Auth",function(a,b){return b.$requireAuth().then(function(b){a.go("dashboard")},function(a){})}]}}).state("password-reset",{url:"/password-reset",controller:"AuthCtrl as authCtrl",templateUrl:"auth/password-reset.html",resolve:{requireNoAuth:["$state","Auth",function(a,b){return b.$requireAuth().then(function(b){a.go("dashboard")},function(a){})}]}}).state("about",{url:"/about",templateUrl:"static/about.html"}).state("profile",{url:"/profile",controller:"ProfileCtrl as profileCtrl",templateUrl:"users/profile.html",resolve:{auth:["$state","Users","Auth",function(a,b,c){return c.$requireAuth()["catch"](function(){a.go("home")})}],profile:["Users","Auth",function(a,b){return b.$requireAuth().then(function(b){return a.getProfile(b.uid).$loaded()})}]}}).state("dashboard",{url:"/dashboard",controller:"DashboardCtrl as dashboardCtrl",templateUrl:"dashboard/index.html",resolve:{auth:["$state","Users","Auth",function(a,b,c){return c.$requireAuth()["catch"](function(){a.go("login")})}],dashboard:["Users","Auth",function(a,b){return b.$requireAuth().then(function(b){return a.getProfile(b.uid).$loaded()})}]}}).state("directory",{url:"/directory",controller:"DirectoryCtrl as directoryCtrl",templateUrl:"directory/index.html",resolve:{auth:["$state","Users","Auth",function(a,b,c){return c.$requireAuth()["catch"](function(){a.go("login")})}],dashboard:["Users","Auth",function(a,b){return b.$requireAuth().then(function(b){return a.getProfile(b.uid).$loaded()})}]}}).state("directory/user",{url:"/directory/user/{userId}",templateUrl:"directory/view.html",controller:"DirectoryCtrl as directoryCtrl"}).state("questions",{url:"/questions",controller:"QuestionsCtrl as questionsCtrl",templateUrl:"questions/index.html",resolve:{questions:["Questions",function(a){return a()}]}}).state("questions/create",{url:"/questions/create",templateUrl:"questions/create.html",controller:"QuestionsCtrl as questionsCtrl"}).state("ideas",{url:"/ideas",controller:"IdeasCtrl as ideasCtrl",templateUrl:"ideas/index.html",resolve:{questions:["Ideas",function(a){return a()}]}}).state("ideas/create",{url:"/ideas/create",templateUrl:"ideas/create.html",controller:"IdeasCtrl as ideasCtrl"}),b.otherwise("/")}]).constant("FIREBASE_URL","https://ss16-retrofire.firebaseio.com/");console.log("--> retrofire/app/app.js loaded"),app.factory("Auth",["$firebaseAuth","FIREBASE_URL",function(a,b){var c=new Firebase(b),d=a(c);return d}]),console.log("--> retrofire/app/auth/auth.service.js loaded"),app.controller("AuthCtrl",["FIREBASE_URL","Auth","$state","$scope","$rootScope",function(a,b,c,d,e){var f=new Firebase(a),g=this;g.user={email:"",password:""},g.login=function(){b.$authWithPassword(g.user).then(function(a){console.log("Logged in as: ",a.uid),c.go("dashboard")},function(a){g.error=a})},g.resetPassword=function(){f.resetPassword({email:g.user.email},function(a){null===a?console.log("Password reset email sent successfully"):console.log("Error sending password reset email:",a)})}}]),console.log("--> retrofire/app/auth/auth.controller.js loaded"),app.factory("Users",["$firebaseArray","$firebaseObject","FIREBASE_URL",function(a,b,c){var d=new Firebase(c+"users"),e=new Firebase(c+".info/connected"),f=a(d),g={getProfile:function(a){return b(d.child(a))},getEmail:function(a){return f.$getRecord(a).email},getDisplayName:function(a){return f.$getRecord(a).displayName},getGravatar:function(a){return"//www.gravatar.com/avatar/"+f.$getRecord(a).emailHash},setOnline:function(c){var f=b(e),g=a(d.child(c+"/online"));f.$watch(function(){f.$value===!0&&g.$add(!0).then(function(a){a.onDisconnect().remove()})})},all:f};return g}]),console.log("--> retrofire/app/users/users.service.js loaded"),app.service("User",["FIREBASE_URL","$firebaseAuth","Users",function(a,b,c){var d=this,e=new Firebase(a),f=b(e),g={uid:"",email:""};d.getId=function(){return g.uid},d.getEmail=function(){return g.email},f.$onAuth(function(a){return a?(console.log("[user service] authenticated User is logged in as:",a.uid),g.uid=a.uid,g.email=a.password.email,g):(console.log("[user service] authenticated user Logged out"),g={uid:"",email:""},console.log("[user service] returned user:",g),g)})}]),console.log("--> retrofire/app/user.service.js loaded"),app.controller("ProfileCtrl",["FIREBASE_URL","$state","Auth","md5","auth","profile","User","Users",function(a,b,c,d,e,f,g,h){var i=new Firebase(a),j=this;j.profile=f,j.updateProfile=function(){j.profile.email=e.password.email,j.profile.emailHash=d.createHash(e.password.email),j.profile.$save().then(function(){b.go("dashboard")})},j.logout=function(){j.profile.online=null,j.profile.$save().then(function(){c.$unauth(),b.go("login")})},j.changePassword=function(){i.changePassword({email:j.profile.email,oldPassword:j.profile.currentPassword,newPassword:j.profile.newPassword},function(a){null===a?console.log("Password changed successfully"):console.log("Error changing password:",a)})}}]),console.log("--> retrofire/app/users.profile.js loaded"),app.controller("NavbarCtrl",["$scope","$state","$firebaseAuth","FIREBASE_URL","Users",function(a,b,c,d,e){var f=new Firebase(d);a.authObj=c(f),a.loggedin=!1,a.authObj.$onAuth(function(b){b?(console.log("[onAuth] Logged in as:",b.uid),a.userObj=e.getProfile(b.uid),a.loggedin=!0,console.log(a.userObj),console.log("User logged in: ",a.loggedin)):(console.log("[onAuth] Logged out"),a.userObj={},a.loggedin=!1,console.log(a.userObj),console.log("User logged in: ",a.loggedin))}),a.logout=function(){a.authObj.$unauth(),console.log("[unauth] Logged out"),b.go("login")}}]),console.log("--> retrofire/app/navbar/navbar.controller.js loaded"),app.controller("DashboardCtrl",["$state","md5","auth",function(a,b,c){}]),console.log("--> retrofire/app/dashboard/dashboard.controller.js loaded"),app.controller("DirectoryCtrl",["$state","$scope","FIREBASE_URL","$firebaseObject","$firebaseArray","$stateParams","ngTableParams","$filter","Users",function(a,b,c,d,e,f,g,h,i){var j=new Firebase(c+"users");b.users=e(j),b.getUser=function(){var a=new Firebase(c+"users");b.user=d(a.child(f.userId))},b.users.$loaded().then(function(a){console.log(a.length);var c=a;b.tableDirectory=new g({page:1,count:10,sorting:{title:"asc"}},{total:c.length,getData:function(a,b){var d=b.sorting()?h("filter")(c,b.filter()):c;a.resolve(d.slice((b.page()-1)*b.count(),b.page()*b.count()))}})});var k=new Firebase(c+"users"),l=e(k);l.$watch(function(a){console.log(a),b.users.$loaded().then(function(){b.tableDirectory.reload()})})}]),console.log("--> retrofire/app/directory.controller.js loaded"),app.controller("QuestionsCtrl",["$state","$scope","FIREBASE_URL","$firebaseObject","$firebaseArray","$stateParams","ngTableParams","$filter","User","Questions",function(a,b,c,d,e,f,g,h,i,j){b.questions=j(),b.userId=i.getId(),b.create=function(){b.questions.$add({user:b.question.user||b.userId,question:b.question.question}).then(function(){console.log("question Created"),a.go("questions")})["catch"](function(a){console.log(a)})},b["delete"]=function(a){b.questions.$remove(a).then(function(){console.log("question Deleted")})["catch"](function(a){console.log(a)})},b.getQuestion=function(){var a=new Firebase(c+"questions");b.question=d(a.child(f.questionId))},b.update=function(){b.question.$save().then(function(){console.log("question Updated"),a.go("questions")})["catch"](function(a){console.log(a)})},b.questions.$loaded().then(function(a){console.log(a.length);var c=a;b.tablequestions=new g({page:1,count:10,sorting:{name:"asc"}},{total:c.length,getData:function(a,b){var d=b.sorting()?h("filter")(c,b.filter()):c;a.resolve(d.slice((b.page()-1)*b.count(),b.page()*b.count()))}})});var k=new Firebase(c+"questions"),l=e(k);l.$watch(function(a){console.log(a),b.questions.$loaded().then(function(){b.tablequestions.reload()})})}]),console.log("--> questions.controller.js loaded"),app.factory("Questions",["FIREBASE_URL","$firebaseArray",function(a,b){return function(){var c=new Firebase(a+"questions");return b(c)}}]),console.log("--> questions.service.js loaded"),app.controller("IdeasCtrl",["$state","$scope","FIREBASE_URL","$firebaseObject","$firebaseArray","$stateParams","ngTableParams","$filter","Ideas",function(a,b,c,d,e,f,g,h,i){b.ideas=i(),b.create=function(){b.ideas.$add({name:b.idea.name,description:b.idea.description,comments:b.idea.comments,tags:b.idea.tags,views:b.idea.views,userId:b.idea.userId}).then(function(){console.log("idea Created"),a.go("ideas")})["catch"](function(a){console.log(a)})},b["delete"]=function(a){b.ideas.$remove(a).then(function(){console.log("idea Deleted")})["catch"](function(a){console.log(a)})},b.getIdea=function(){var a=new Firebase(c+"ideas");b.idea=d(a.child(f.ideaId)),b.idea.views=b.idea.views++,b.update()},b.update=function(){b.idea.$save().then(function(){console.log("idea Updated"),a.go("ideas")})["catch"](function(a){console.log(a)})},b.ideas.$loaded().then(function(a){console.log(a.length);var c=a;b.tableDevices=new g({page:1,count:10,sorting:{name:"asc"}},{total:c.length,getData:function(a,b){var d=b.sorting()?h("filter")(c,b.filter()):c;a.resolve(d.slice((b.page()-1)*b.count(),b.page()*b.count()))}})});var j=new Firebase(c+"ideas"),k=e(j);k.$watch(function(a){console.log(a),b.ideas.$loaded().then(function(){b.tableDevices.reload()})})}]),console.log("--> basestation/app/devices/ideas.controller.js loaded"),app.factory("Ideas",["FIREBASE_URL","$firebaseArray",function(a,b){return function(){var c=new Firebase(a+"ideas");return b(c)}}]),console.log("--> basestation/app/ideas/ideas.service.js loaded");